<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhang.dao.EmployeeMapper">
	<resultMap id="BaseResultMap" type="com.zhang.bean.Employee">
		<id column="worker_id" jdbcType="INTEGER" property="workerId" />
		<result column="worker_name" jdbcType="VARCHAR"
			property="workerName" />
		<result column="worker_gender" jdbcType="CHAR"
			property="workerGender" />
		<result column="worker_email" jdbcType="VARCHAR"
			property="workerEmail" />
		<result column="d_id" jdbcType="INTEGER" property="dId" />
	</resultMap>
	<resultMap type="com.zhang.bean.Employee"
		id="WithDeptResultMap">
		<id column="worker_id" jdbcType="INTEGER" property="workerId" />
		<result column="worker_name" jdbcType="VARCHAR"
			property="workerName" />
		<result column="worker_gender" jdbcType="CHAR"
			property="workerGender" />
		<result column="worker_email" jdbcType="VARCHAR"
			property="workerEmail" />
		<result column="d_id" jdbcType="INTEGER" property="dId" />
		<!-- 指定联合查询出的部门字段的封装 -->
		<association property="department"
			javaType="com.zhang.bean.Department">
			<id column="dept_id" property="deptId" />
			<result column="dept_name" property="deptName" />
		</association>

	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		worker_id, worker_name, worker_gender, worker_email, d_id
	</sql>
	<sql id="Withdept_Column_List">
		e.worker_id,e.worker_name,e.worker_gender,e.worker_email,
		e.d_id,d.dept_id,d.dept_name
	</sql>

	<!-- List<Employee> selectByExampleWithDept(EmployeeExample example); Employee 
		selectByPrimaryKeyWithDept(Integer workerId); -->
		<!-- 查找多项 -->
	<select id="selectByExampleWithDept"
		resultMap="WithDeptResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Withdept_Column_List" />
		FROM worker e
		LEFT JOIN dept d ON e.d_id=d.dept_id
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKeyWithDept"
		resultMap="WithDeptResultMap">
		select
		<include refid="Withdept_Column_List" />
		FROM worker e
		LEFT JOIN dept d ON e.d_id=d.dept_id
		where worker_id = #{workerId,jdbcType=INTEGER}
	</select>


	<select id="selectByExample"
		parameterType="com.zhang.bean.EmployeeExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from worker
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from worker
		where worker_id = #{workerId,jdbcType=INTEGER}
	</select>

	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from worker
		where worker_id =
		#{workerId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.zhang.bean.EmployeeExample">
		delete from worker
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.zhang.bean.Employee">
		insert into worker (worker_id,
		worker_name, worker_gender,
		worker_email, d_id)
		values
		(#{workerId,jdbcType=INTEGER}, #{workerName,jdbcType=VARCHAR},
		#{workerGender,jdbcType=CHAR},
		#{workerEmail,jdbcType=VARCHAR},
		#{dId,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective"
		parameterType="com.zhang.bean.Employee">
		insert into worker
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="workerId != null">
				worker_id,
			</if>
			<if test="workerName != null">
				worker_name,
			</if>
			<if test="workerGender != null">
				worker_gender,
			</if>
			<if test="workerEmail != null">
				worker_email,
			</if>
			<if test="dId != null">
				d_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="workerId != null">
				#{workerId,jdbcType=INTEGER},
			</if>
			<if test="workerName != null">
				#{workerName,jdbcType=VARCHAR},
			</if>
			<if test="workerGender != null">
				#{workerGender,jdbcType=CHAR},
			</if>
			<if test="workerEmail != null">
				#{workerEmail,jdbcType=VARCHAR},
			</if>
			<if test="dId != null">
				#{dId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.zhang.bean.EmployeeExample"
		resultType="java.lang.Long">
		select count(*) from worker
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update worker
		<set>
			<if test="record.workerId != null">
				worker_id = #{record.workerId,jdbcType=INTEGER},
			</if>
			<if test="record.workerName != null">
				worker_name = #{record.workerName,jdbcType=VARCHAR},
			</if>
			<if test="record.workerGender != null">
				worker_gender = #{record.workerGender,jdbcType=CHAR},
			</if>
			<if test="record.workerEmail != null">
				worker_email = #{record.workerEmail,jdbcType=VARCHAR},
			</if>
			<if test="record.dId != null">
				d_id = #{record.dId,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update worker
		set worker_id = #{record.workerId,jdbcType=INTEGER},
		worker_name = #{record.workerName,jdbcType=VARCHAR},
		worker_gender =
		#{record.workerGender,jdbcType=CHAR},
		worker_email =
		#{record.workerEmail,jdbcType=VARCHAR},
		d_id =
		#{record.dId,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.zhang.bean.Employee">
		update worker
		<set>
			<if test="workerName != null">
				worker_name = #{workerName,jdbcType=VARCHAR},
			</if>
			<if test="workerGender != null">
				worker_gender = #{workerGender,jdbcType=CHAR},
			</if>
			<if test="workerEmail != null">
				worker_email = #{workerEmail,jdbcType=VARCHAR},
			</if>
			<if test="dId != null">
				d_id = #{dId,jdbcType=INTEGER},
			</if>
		</set>
		where worker_id = #{workerId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.zhang.bean.Employee">
		update worker
		set
		worker_name =
		#{workerName,jdbcType=VARCHAR},
		worker_gender =
		#{workerGender,jdbcType=CHAR},
		worker_email =
		#{workerEmail,jdbcType=VARCHAR},
		d_id = #{dId,jdbcType=INTEGER}
		where
		worker_id = #{workerId,jdbcType=INTEGER}
	</update>
</mapper>